</div>
<!-- End of Main Content -->

<!-- Footer -->
<footer class="sticky-footer bg-white">
  <div class="container my-auto">
    <div class="copyright text-center my-auto">
      <span>Copyright &copy; Your Website 2021</span>
    </div>
  </div>
</footer>
<!-- End of Footer -->
</div>
<!-- End of Content Wrapper -->
</div>
<!-- End of Page Wrapper -->

<!-- Scroll to Top Button-->
<a class="scroll-to-top rounded" href="#page-top">
  <i class="fas fa-angle-up"></i>
</a>

<!-- Logout Modal-->
<div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
  aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Bạn muốn đăng xuất?</h5>
        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <div class="modal-body">Chọn "Đăng xuất" nếu bạn muốn kết thúc phiên đăng nhập.</div>
      <div class="modal-footer">
        <button class="btn btn-secondary" type="button" data-dismiss="modal">Hủy</button>
        <a class="btn btn-primary" onclick="logout()">Đăng xuất</a>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="templatePopup" tabindex="-1" role="dialog" aria-labelledby="templatePopupModal"
  aria-hidden="true">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content" style="max-height: calc(100vh - 1.75rem * 2);">
      <div class="modal-header">
        <h5 class="modal-title" id="titleTemplatePopupModal"></h5>
        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <div class="modal-body" id="templatePopupBody" style="flex: 1; overflow: auto;"></div>
      <div class="modal-footer" id="modalFooterTemplate">
      </div>
    </div>
  </div>
</div>

<!-- Bootstrap core JavaScript-->
<script src="/vendor/jquery/jquery.min.js"></script>
<script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

<!-- Core plugin JavaScript-->
<script src="/vendor/jquery-easing/jquery.easing.min.js"></script>
<script src="/vendor/datatables/jquery.dataTables.min.js"></script>
<script src="/vendor/datatables/dataTables.bootstrap4.min.js"></script>

<script>
  async function logout() {
    const response = await fetch(`${URL}/auth/logout`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      }
    });
    const result = await response.json();

    if (result.status == 200) {
      window.location.href = '/login'
    }
  }

  function paginationDataTable(result, columns) {
    $('#example').DataTable({
      data: result,
      columns: columns,
      ordering: false,
      language: {
      lengthMenu: "Chọn số lượng _MENU_",
      info: "Từ _START_ đến _END_ trong tổng cộng _TOTAL_",
      paginate: {
        previous: "Trang trước",
        next: "Trang tiếp"
      },
    }
    });
  }

  async function templatePopupModal(title, body, api) {
    const titleTemplatePopupModal = document.getElementById('titleTemplatePopupModal')
    const templatePopupBody = document.getElementById('templatePopupBody')
    const modalFooterTemplate = document.getElementById('modalFooterTemplate')
    titleTemplatePopupModal.innerText = title
    templatePopupBody.innerHTML = '<div id="messageInPopup"></div>' + body
    modalFooterTemplate.innerHTML = '<button class="btn btn-secondary" type="button" data-dismiss="modal">Đóng</button>'

    if (api && !modalFooterTemplate.innerHTML.includes('submitPostAPI')) {
      modalFooterTemplate.innerHTML += `<a class="btn btn-primary" id="submitPostAPI">Xác nhận</a>`
      const submitPostAPI = document.getElementById('submitPostAPI')

      let errors = [];

      const queryTemplatePopupBody = document.querySelector('#templatePopupBody')
      const inputAvatarProfile = queryTemplatePopupBody.querySelector('#popupTemplate-avatar')
      const showAvatar = queryTemplatePopupBody.querySelector('#popupTemplate-avatar-profile')

      if (inputAvatarProfile) {
        inputAvatarProfile.addEventListener('change', () => {
          const file = inputAvatarProfile.files[0];
          const reader = new FileReader();

          reader.addEventListener('load', () => {
            showAvatar.src = reader.result;
          });

          reader.readAsDataURL(file);
        });
      }
      
      submitPostAPI.onclick = async () => { 
        const inputs = queryTemplatePopupBody.querySelectorAll('.form-control')
        const message = queryTemplatePopupBody.querySelector('#messageInPopup')

        let data = {};
        const arrayIds = []
        inputs.forEach(element => {
          let key = element.id.split('-')[1]
          let value;
          if (element.type =='number') {
            value = parseFloat(element.value)
          }else if(element.type =='checkbox'){
            if (element.checked) {
              arrayIds.push(element.value)
            }
          }else{
            value = element.value
          }
          if (key == 'avatar') {
            value = showAvatar.src
          }
          data[key] = value || value == 0 ? value : arrayIds
        });

        const response = await fetch(`${URL}/${api}/`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });
        const result = await response.json();

        if (result.status == 400) {
          message.innerHTML = '';
          errors = [];
          if (Array.isArray(result.message)) {
            errors = result.message;
          } else {
            errors[0] = result.message;
          }

          for (let i = 0; i < errors.length; i++) {
            message.innerHTML += `<div class="text-xs font-weight-bold text-danger mb-1">* ${errors[i]}</div>`;
          }
        }

        if (result.status == 200) {
          clickShowPopup.click()
          location.reload()
        }
      }
    }
    const clickShowPopup = document.getElementById('clickShowPopup')
    clickShowPopup.click()
  }

  function convertDateFormat(dateString) {
    const dateParts = dateString.split('/');
    const year = dateParts[2];
    const month = dateParts[1];
    const day = dateParts[0];
    return year + '-' + month + '-' + day;
  }

  function removeVietnameseTones (str) {
  str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');
  str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');
  str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');
  str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');
  str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');
  str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');
  str = str.replace(/đ/g, 'd');
  str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, 'A');
  str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, 'E');
  str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, 'I');
  str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, 'O');
  str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, 'U');
  str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, 'Y');
  str = str.replace(/Đ/g, 'D');
  // Some system encode vietnamese combining accent as individual utf-8 characters
  // Một vài bộ encode coi các dấu mũ, dấu chữ như một kí tự riêng biệt nên thêm hai dòng này
  str = str.replace(/\u0300|\u0301|\u0303|\u0309|\u0323/g, ''); // ̀ ́ ̃ ̉ ̣  huyền, sắc, ngã, hỏi, nặng
  str = str.replace(/\u02C6|\u0306|\u031B/g, ''); // ˆ ̆ ̛  Â, Ê, Ă, Ơ, Ư
  // Remove extra spaces
  // Bỏ các khoảng trắng liền nhau
  str = str.replace(/ + /g, ' ');
  str = str.trim();
  // Remove punctuations
  // Bỏ dấu câu, kí tự đặc biệt
  str = str.replace(/!|@|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|\/|,|\.|\:|\;|\'|\"|\&|\#|\[|\]|~|\$|_|`|-|{|}|\||\\/g, ' ');
  str = str.replace(/ /g, '');
  return str.toLowerCase();
};
</script>

<!-- Custom scripts for all pages-->
<script src="/js/sb-admin-2.min.js"></script>

<!-- Page level plugins -->


<a id="clickShowPopup" hidden data-toggle="modal" data-target="#templatePopup"></a>
</body>

</html>